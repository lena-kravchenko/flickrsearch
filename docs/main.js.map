{"version":3,"sources":["./src/app/search-images/search-images.component.html","./src/app/search-images/search-images.component.ts","./src/app/services/flickr.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"container\">\n  <h1 class=\"text-center\">Image Finder</h1>\n  <div class=\"form-group\">\n    <input\n      type=\"search\"\n      class=\"form-control\"\n      (keyup)=\"search($event)\"\n      (keydown)=\"showImage()\"\n      placeholder=\"Find images\"\n    >\n  </div>\n\n  <div *ngIf=\"imagesAreShown; else noImages\">\n    <div class=\"row\">\n      <div class=\"col-sm-12 col-md-6 col-lg-4 p-3\" *ngFor=\"let image of images\">\n        <div class=\"card\">\n          <a href=\"{{image.url}}_b.jpg\">\n            <img\n              src=\"{{image.url}}_m.jpg\"\n              title=\"{{image.title}}\"\n              alt=\"{{image.title}}\"\n            >\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #noImages>\n    <p>No images here. Would you try to search for anything else?</p>\n  </ng-template>\n\n<!--   <div class=\"row\">\n    <div class=\"col-sm-12 col-md-6 col-lg-4 p-3\" *ngFor=\"let image of images\">\n      <div class=\"card\">\n        <a href=\"{{image.url}}_b.jpg\">\n          <img\n            src=\"{{image.url}}_m.jpg\"\n            title=\"{{image.title}}\"\n            alt=\"{{image.title}}\"\n          >\n        </a>\n      </div>\n    </div>\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FlickrService } from '../services/flickr.service';\n\n@Component({\n  selector: 'app-search-images',\n  templateUrl: './search-images.component.html',\n  styleUrls: ['./search-images.component.scss']\n})\nexport class SearchImagesComponent implements OnInit {\n  images = [];\n  keyword: string;\n\n  imagesAreShown = false;\n\n  showImage() {\n    this.imagesAreShown = !this.imagesAreShown;\n  }\n\n  constructor(private flickrService: FlickrService) { }\n\n  ngOnInit(): void {\n  }\n\n  search(event: any) {\n    this.keyword = event.target.value.toLowerCase();\n    if (this.keyword && this.keyword.length > 0) {\n      this.flickrService.search_keyword(this.keyword)\n      .toPromise()\n      .then(res => {\n        this.images = res;\n      });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nexport interface FlickrPhoto {\n  farm: string;\n  id: string;\n  secret: string;\n  server: string;\n  title: string;\n}\n\nexport interface FlickrOutput {\n  photos: {\n    photo: FlickrPhoto[];\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlickrService {\n\n  constructor(private http: HttpClient) { }\n\n  search_keyword(keyword: string) {\n    const url = 'https://www.flickr.com/services/rest/?method=flickr.photos.search&';\n    const params = `api_key=${environment.flickr.key}&text=${keyword}&format=json&nojsoncallback=1`;\n\n    return this.http.get(url + params).pipe(map((res: FlickrOutput) => {\n      const urlArr = [];\n      res.photos.photo.forEach((ph: FlickrPhoto) => {\n        const photoObj = {\n          url: `https://farm${ph.farm}.staticflickr.com/${ph.server}/${ph.id}_${ph.secret}`,\n          title: ph.title\n        };\n        urlArr.push(photoObj);\n      });\n      return urlArr;\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  flickr: {\n    key: 'f86c0a4bc487f162a1b7d63d65ad525b'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'flickrsearch';\n}\n","<app-search-images></app-search-images>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { SearchImagesComponent } from './search-images/search-images.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchImagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}